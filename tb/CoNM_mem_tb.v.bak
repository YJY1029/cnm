`include "../core/defines.v"

module CoNM_mem_tb(); 
	
	//Clock signal
	localparam clk_period = 10; 
	reg clk; 
	initial clk = 1'b0; 
	always #(clk_period/2) clk = ~clk; 
	
	reg rst; 
	
	//pc inputs
	reg [`INST_WIDTH] imem_pc_inst; 
	//sb inputs
	reg [`DATA_WIDTH] s_rdata; 
	
	//connections 
	wire extl_sb_un_sign; 
	wire [`BYTE_SEL] extl_sb_byte_mask; 
	wire extl_sb_mem_re; 
	wire extl_sb_mem_we; 
	wire [`MEM_ADDR_WIDTH] extl_sb_addr; 
	wire [`DATA_WIDTH] extl_sb_mem_wdata; 
	//suspended
	wire m1_un_sign; 
	assign m1_un_sign = `UNSIGNED; 
	wire [`BYTE_SEL] m1_byte_mask; 
	assign m1_byte_mask = `SL_NONE; 
	wire m1_re; 
	assign m1_re = 1'b0; 
	wire m1_we; 
	assign m1_we = 1'b0; 
	wire [`MEM_ADDR_WIDTH] m1_addr; 
	assign m1_addr = 32'b0; 
	reg [`DATA_WIDTH] m1_rdata_o; 
	
	//pc outputs
	wire [`INST_ADDR_WIDTH] pc_imem_inst_addr; 
	//sb outputs
	wire s_rw_o; 
	wire [`MEM_ADDR_WIDTH] s_addr_o; 
	wire [`DATA_WIDTH] s_wdata_o; 
	
CoNM u_CoNM(
	.clk(clk), 
	.rst(rst), 
	.sb_pc_inst(imem_pc_inst), 
	.sb_csrgf_rdata(sb_csrgf_rdata), 
	
	.pc_imem_inst_addr(pc_imem_inst_addr), 
	
	.extl_sb_un_sign_o(extl_sb_un_sign), 
	.extl_sb_byte_mask_o(extl_sb_byte_mask), 
	.extl_sb_mem_re_o(extl_sb_mem_re), 
	.extl_sb_mem_we_o(extl_sb_mem_we), 
	.extl_sb_addr_o(extl_sb_addr), 
	.extl_sb_mem_wdata_o(extl_sb_mem_wdata)
	);
	
sb u_sb(
	.clk(clk), 
	.rst(rst), 
	.m0_un_sign(extl_sb_un_sign), 
	.m0_byte_mask(extl_sb_byte_mask), 
	.m0_re(extl_sb_mem_re), 
	.m0_we(extl_sb_mem_we), 
	.m0_addr(extl_sb_addr), 
	.m0_wdata(extl_sb_mem_wdata), 
	.m0_rdata(sb_csrgf_rdata), 
	
	.m1_un_sign(m1_un_sign), 
	.m1_byte_mask(m1_byte_mask), 
	.m1_re(m1_re), 
	.m1_we(m1_we), 
	.m1_addr(m1_addr), 
	.m1_wdata(m1_wdata), 
	.m1_rdata(m1_rdata_o), 
	
	.s_rdata(s_rdata), 
	.s_rw_o(s_rw_o), 
	.s_addr_o(s_addr_o), 
	.s_wdata_o(s_wdata_o)
	); 
	
	initial begin
		
	end
	
endmodule